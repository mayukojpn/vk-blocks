{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/bundle.js","webpack:///./src/alert/block.js","webpack:///./src/balloon/block.js","webpack:///./src/button/block.js","webpack:///./src/faq/block.js","webpack:///./src/flow/block.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__","wp","i18n","registerBlockType","blocks","RichText","editor","title","icon","category","attributes","style","type","default","content","source","selector","edit","_ref","setAttributes","React","createElement","className","concat","onChange","event","target","selected","tagName","newContent","save","_ref2","Content","components","RadioControl","RangeControl","PanelBody","Button","Fragment","element","InspectorControls","MediaUpload","ColorPalette","BlockIcon","xmlns","width","height","viewBox","balloonName","balloonType","balloonBgColor","balloonAlign","IconImage","label","help","options","onSelect","sizes","full","url","render","open","onClick","src","alt","placeholder","background","border","_ref3","BaseControl","TextControl","CheckboxControl","buttonUrl","buttonSize","buttonType","buttonColor","buttonColorCustom","buttonAlign","onStyleChange","onSizeChange","backgroundColor","buttonName","buttonBgColor","heading","PanelColor","arrowFlag","insertImage"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kCClFAnC,EAAAkB,EAAAkB,GAAApC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,sBCKOqC,EAAMC,GAAGC,KAATF,GACCG,EAAsBF,GAAGG,OAAzBD,kBACAE,EAAsBJ,GAAGK,OAAzBD,SAERF,EAAmB,kBAAmB,CAEpCI,MAAOP,EAAG,QAAS,aAEnBQ,KAAM,OAENC,SAAU,gBAEVC,WAAY,CACVC,MAAO,CACLC,KAAM,SACNC,QAAS,QAEXC,QAAS,CACLF,KAAM,SACNG,OAAQ,OACRC,SAAU,MAIhBC,KApBoC,SAAAC,GAoBF,IAA5BR,EAA4BQ,EAA5BR,WAAYS,EAAgBD,EAAhBC,cAEVR,EAEAD,EAFAC,MACAG,EACAJ,EADAI,QAWN,OACIM,MAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBZ,IAC/BS,MAAAC,cAAA,UAAQG,SAVZ,SAAuBC,GACrBN,EAAc,CAACR,MAAOc,EAAMC,OAAO1C,UAU7BoC,MAAAC,cAAA,UAAQrC,MAAO,UAAW2C,SAAoB,YAAVhB,GAApC,WACAS,MAAAC,cAAA,UAAQrC,MAAO,OAAQ2C,SAAoB,SAAVhB,GAAjC,QACAS,MAAAC,cAAA,UAAQrC,MAAO,UAAW2C,SAAoB,YAAVhB,GAApC,WACAS,MAAAC,cAAA,UAAQrC,MAAO,SAAU2C,SAAoB,WAAVhB,GAAnC,WAEJS,MAAAC,cAAChB,EAAD,CACIuB,QAAQ,IACRJ,SAdR,SAAyBK,GACvBV,EAAc,CAACL,QAASe,KAclB7C,MAAO8B,MAMjBgB,KAnDoC,SAAAC,GAmDjB,IAAbrB,EAAaqB,EAAbrB,WAEEC,EAEAD,EAFAC,MACAG,EACAJ,EADAI,QAEN,OACIM,MAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBZ,IAC/BS,MAAAC,cAAChB,EAAS2B,QAAV,CACIJ,QAAS,IACT5C,MAAO8B,2BChEZd,EAAMC,GAAGC,KAATF,GACCG,EAAsBF,GAAGG,OAAzBD,oBACgDF,GAAGgC,WAAtCC,KAAdC,eAAcD,cAAcE,cAAWC,WACtCC,EAAarC,GAAGsC,QAAhBD,WACyDrC,GAAGK,OAA7DD,aAAUmC,sBAAmBC,gBAAaC,iBAC3CC,EACLvB,MAAAC,cAAA,OAAKuB,MAAM,6BAA6BC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,eACxE3B,MAAAC,cAAA,QAAMhD,EAAE,iqCAiBV8B,EAAkB,oBAAqB,CAEnCI,MAAOP,EAAG,SAAU,aACvBQ,KAAMmC,EACNlC,SAAU,gBACVC,WAAY,CACXI,QAAS,CACRC,OAAQ,OACCC,SAAU,KAEdgC,YAAa,CACTjC,OAAQ,OACRC,SAAU,cAEdiC,YAAa,CACTrC,KAAM,SACNC,QAAS,cAEnBqC,eAAgB,CACftC,KAAM,UAEPuC,aAAc,CACbvC,KAAM,SACNC,QAAS,iBAEVuC,UAAW,CACVxC,KAAM,SACNC,QAAS,OAYXI,KAvCsC,SAAAC,GAuCW,IAAzCR,EAAyCQ,EAAzCR,WAAYY,EAA6BJ,EAA7BI,UAAWH,EAAkBD,EAAlBC,cAE7BL,EAMGJ,EANHI,QACSkC,EAKNtC,EALMsC,YACAC,EAINvC,EAJMuC,YACAC,EAGNxC,EAHMwC,eACTC,EAEGzC,EAFHyC,aACAC,EACG1C,EADH0C,UAGK,OACLhC,MAAAC,cAACiB,EAAD,KACClB,MAAAC,cAACmB,EAAD,KACCpB,MAAAC,cAACe,EAAD,CAAW7B,MAAOP,EAAG,kBAAmB,cACvCoB,MAAAC,cAACa,EAAD,CACCmB,MAAOrD,EAAG,WAAY,aACtBsD,KAAMtD,EAAG,4CAA6C,aACtD2B,SAAWwB,EACXI,QAAU,CACT,CAAEF,MAAOrD,EAAG,OAAQ,aAAchB,MAAO,iBACzC,CAAEqE,MAAOrD,EAAG,QAAS,aAAchB,MAAO,mBAE3CwC,SAAW,SAAExC,GAAF,OAAamC,EAAe,CAAEgC,aAAcnE,OAEpDoC,MAAAC,cAACa,EAAD,CACImB,MAAOrD,EAAG,OAAQ,aAClBsD,KAAMtD,EAAG,qCAAsC,aAC/C2B,SAAWsB,EACXM,QAAU,CACN,CAAEF,MAAOrD,EAAG,QAAS,aAAchB,MAAO,cAC1C,CAAEqE,MAAOrD,EAAG,WAAY,aAAchB,MAAO,eAEjDwC,SAAW,SAAExC,GAAF,OAAamC,EAAe,CAAE8B,YAAajE,OAE1DoC,MAAAC,cAACqB,EAAD,CACI1D,MAAOkE,EACP1B,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAAC+B,eAAgBlE,SAK9DoC,MAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAOD,EAAP,2BAAAC,OAA4C4B,EAA5C,gBAAA5B,OAAyE0B,IACtF7B,MAAAC,cAAA,OAAKC,UAAY,mBAChBF,MAAAC,cAACoB,EAAD,CACCe,SAAW,SAACxE,GAAD,OAAWmC,EAAe,CAAEiC,UAAWpE,EAAMyE,MAAMC,KAAKC,OACnE/C,KAAK,QACLU,UAAY,wBACZtC,MAAQoE,EACRQ,OAAS,SAAA7B,GAAA,IAAI8B,EAAJ9B,EAAI8B,KAAJ,OACRzC,MAAAC,cAACgB,EAAD,CACCyB,QAAUD,EACVvC,UAAY8B,EAAY,eAAiB,uBAErCA,EAA8ChC,MAAAC,cAAA,OAAKC,UAAY,wBAA0ByC,IAAMX,EAAYY,IAAKhE,EAAG,eAAgB,eAAvHA,EAAG,eAAgB,iBAIpBoB,MAAAC,cAAChB,EAAD,CACIuB,QAAQ,aACtBN,UAAY,uBACEE,SAAW,SAAExC,GAAF,OAAamC,EAAe,CAAE6B,YAAahE,KACtDA,MAAQgE,EACRiB,YAAajE,EAAG,YAAa,gBAGpDoB,MAAAC,cAAChB,EAAD,CACCM,MAAQ,CAAEuD,WAAYhB,EAAgBiB,OAAQjB,GAC9CtB,QAAQ,IACRN,UAAY,qBACZE,SAAW,SAAExC,GAAF,OAAamC,EAAe,CAAEL,QAAS9B,KAClDA,MAAQ8B,EACRmD,YAAajE,EAAG,aAAc,kBAgBnC8B,KA9HsC,SAAAsC,GA8HJ,IAA1B1D,EAA0B0D,EAA1B1D,WAENI,GAFgCsD,EAAd9C,UAQfZ,EANHI,SACSkC,EAKNtC,EALMsC,YACAC,EAINvC,EAJMuC,YACAC,EAGNxC,EAHMwC,eACTC,EAEGzC,EAFHyC,aACAC,EACG1C,EADH0C,UAGD,OACChC,MAAAC,cAAA,OAAKC,UAAS,yBAAAC,OAA6B4B,EAA7B,gBAAA5B,OAA0D0B,IACvE7B,MAAAC,cAAA,OAAKC,UAAY,mBACd8B,EACDhC,MAAAC,cAAA,cACCD,MAAAC,cAAA,OACCC,UAAY,wBACZyC,IAAMX,EACNY,IAAI,KAEgB5C,MAAAC,cAAChB,EAAS2B,QAAV,CACIJ,QAAQ,aACxBN,UAAY,uBACItC,MAAQgE,KAEtB,IAEd5B,MAAAC,cAAChB,EAAS2B,QAAV,CACCV,UAAY,qBACZX,MAAQ,CAAEuD,WAAYhB,EAAgBiB,OAAQjB,GAC9CtB,QAAQ,IACR5C,MAAQ8B,2BCrLNd,EAAMC,GAAGC,KAATF,GACAG,EAAqBF,GAAGG,OAAxBD,oBAC4FF,GAAGgC,WAAjFC,KAAdC,eAAcD,cAAcE,cAAmBiC,KAARhC,SAAQgC,aAA8BC,KAAjBC,kBAAiBD,aAC7EhC,EAAYrC,GAAGsC,QAAfD,WAC0DrC,GAAGK,OAA7DD,aAAUmC,sBAAgCE,KAAbD,cAAaC,cAC3CC,EACFvB,MAAAC,cAAA,OAAKuB,MAAM,6BAA6BC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,eACrE3B,MAAAC,cAAA,QACIhD,EAAE,iqCAiBd8B,EAAkB,mBAAoB,CAElCI,MAAOP,EAAG,SAAU,aACpBQ,KAAMmC,EACNlC,SAAU,gBACVC,WAAY,CACRI,QAAS,CACLC,OAAQ,OACRC,SAAU,KAEdwD,UAAW,CACP5D,KAAM,SACNC,QAAS,MAEb4D,WAAY,CACR7D,KAAM,SACNC,QAAS,MAEb6D,WAAY,CACR9D,KAAM,SACNC,QAAS,KAEb8D,YAAa,CACT/D,KAAM,SACNC,QAAS,WAEb+D,kBAAmB,CACfhE,KAAM,SACNC,QAAS,MAEbgE,YAAa,CACTjE,KAAM,SACNC,QAAS,kBAYjBI,KA5CkC,SAAAC,GA4CW,IAAvCR,EAAuCQ,EAAvCR,WAAuBS,GAAgBD,EAA3BI,UAA2BJ,EAAhBC,eAErBL,EAOAJ,EAPAI,QACA0D,EAMA9D,EANA8D,UACAC,EAKA/D,EALA+D,WACAC,EAIAhE,EAJAgE,WACAC,EAGAjE,EAHAiE,YACAC,EAEAlE,EAFAkE,kBAEAlE,EADAmE,YAGJ,SAASC,EAAcrD,GACnBN,EAAc,CAACwD,YAAalD,EAAMC,OAAO1C,QAE7C,SAAS+F,EAAatD,GAClBN,EAAc,CAACsD,WAAYhD,EAAMC,OAAO1C,QAG5C,OACIoC,MAAAC,cAACiB,EAAD,KACIlB,MAAAC,cAACmB,EAAD,KACIpB,MAAAC,cAACe,EAAD,CAAW7B,MAAOP,EAAG,iBAAkB,cACnCoB,MAAAC,cAACgD,EAAD,CACIhB,MAAOrD,EAAG,YAAa,cAEvBoB,MAAAC,cAACiD,EAAD,CACItF,MAAOwF,EACPhD,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACqD,UAAWxF,QAGvDoC,MAAAC,cAACgD,EAAD,CACIhB,MAAOrD,EAAG,gBAAiB,cAE3BoB,MAAAC,cAACqB,EAAD,CACI1D,MAAO4F,EACPpD,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACyD,kBAAmB5F,OAE3DoC,MAAAC,cAACa,EAAD,CACImB,MAAOrD,EAAG,gBAAiB,aAC3B2B,SAAU+C,EACVnB,QAAS,CACL,CAACF,MAAOrD,EAAG,cAAe,aAAchB,MAAO,KAC/C,CAACqE,MAAOrD,EAAG,gBAAiB,aAAchB,MAAO,MAErDwC,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACuD,WAAY1F,UAMxD4F,EAEmB,MAAfF,EACOtD,MAAAC,cAAA,UAAQT,KAAK,SAASU,UAAS,WAAAC,OAAakD,GAAc9D,MAAO,CACpEqE,gBAAiBJ,EACjBT,OAAM,aAAA5C,OAAeqD,KAErBxD,MAAAC,cAAChB,EAAD,CACIuB,QAAQ,IACRN,UAAW,oBACXE,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACL,QAAS9B,KAC7CA,MAAO8B,EACPmD,YAAajE,EAAG,aAAc,gBAI/BoB,MAAAC,cAAA,UAAQT,KAAK,SAASU,UAAS,WAAAC,OAAakD,GAAc9D,MAAO,CACpEqE,gBAAiB,cACjBb,OAAQ,YAAcS,IAEtBxD,MAAAC,cAAChB,EAAD,CACIuB,QAAQ,IACRN,UAAW,oBACXE,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACL,QAAS9B,KAC7CA,MAAO8B,EACPmD,YAAajE,EAAG,aAAc,gBAMnCoB,MAAAC,cAAA,WACHD,MAAAC,cAAA,UAAQG,SAAUsD,GACd1D,MAAAC,cAAA,UAAQrC,MAAO,UAAW2C,SAA0B,YAAhBgD,GAApC,WACAvD,MAAAC,cAAA,UAAQrC,MAAO,OAAQ2C,SAA0B,SAAhBgD,GAAjC,QACAvD,MAAAC,cAAA,UAAQrC,MAAO,UAAW2C,SAA0B,YAAhBgD,GAApC,WACAvD,MAAAC,cAAA,UAAQrC,MAAO,SAAU2C,SAA0B,WAAhBgD,GAAnC,WAEJvD,MAAAC,cAAA,UAAQG,SAAUuD,GACd3D,MAAAC,cAAA,UAAQrC,MAAO,KAAM2C,SAA0B,OAAhBgD,GAA/B,4BACAvD,MAAAC,cAAA,UAAQrC,MAAO,KAAM2C,SAA0B,OAAhBgD,GAA/B,6BACAvD,MAAAC,cAAA,UAAQrC,MAAO,KAAM2C,SAA0B,OAAhBgD,GAA/B,6BAEJvD,MAAAC,cAAA,UAAQT,KAAK,SAASU,UAAS,WAAAC,OAAakD,EAAb,SAAAlD,OAA+BoD,IAC1DvD,MAAAC,cAAChB,EAAD,CACIuB,QAAQ,IACRN,UAAW,oBACXE,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACL,QAAS9B,KAC7CA,MAAO8B,EACPmD,YAAajE,EAAG,aAAc,mBAmB9D8B,KAlKkC,SAAAC,GAkKJ,IAAxBrB,EAAwBqB,EAAxBrB,WAEEI,GAFsBiB,EAAZT,UAQVZ,EANAI,SACAmE,EAKAvE,EALAuE,WACAP,EAIAhE,EAJAgE,WACAQ,EAGAxE,EAHAwE,cACAL,EAEAnE,EAFAmE,YACAzB,EACA1C,EADA0C,UAGJ,OACIhC,MAAAC,cAAA,OAAKC,UAAS,uBAAAC,OAA0BsD,EAA1B,eAAAtD,OAAqDmD,IAC/DtD,MAAAC,cAAA,OAAKC,UAAW,kBACX8B,EACGhC,MAAAC,cAAA,cACID,MAAAC,cAAA,OACIC,UAAW,uBACXyC,IAAKX,EACLY,IAAI,KAER5C,MAAAC,cAAChB,EAAS2B,QAAV,CACIJ,QAAQ,aACRN,UAAW,sBACXtC,MAAOiG,KAEH,IAEpB7D,MAAAC,cAAChB,EAAS2B,QAAV,CACIV,UAAW,oBACXX,MAAO,CAACuD,WAAYgB,EAAef,OAAQe,GAC3CtD,QAAQ,IACR5C,MAAO8B,2BC3NpBd,EAAMC,GAAGC,KAATF,GACAG,EAAqBF,GAAGG,OAAxBD,kBACAE,EAAYJ,GAAGK,OAAfD,SAgBPF,EAAkB,gBAAiB,CAE/BI,MAAOP,EAAG,MAAO,aACjBQ,KAlBc,cAmBdC,SAAU,gBACVC,WAAY,CACRyE,QAAS,CACLvE,KAAM,SACNG,OAAQ,OACRC,SAAU,MAEdF,QAAS,CACLF,KAAM,SACNG,OAAQ,OACRC,SAAU,OAYlBC,KA1B+B,SAAAC,GA0BG,IAA5BR,EAA4BQ,EAA5BR,WAAYS,EAAgBD,EAAhBC,cAEVgE,EAEAzE,EAFAyE,QACArE,EACAJ,EADAI,QAGJ,OACIM,MAAAC,cAAA,MAAIC,UAAW,UACXF,MAAAC,cAAChB,EAAD,CACIuB,QAAQ,KAClBN,UAAY,eACFE,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACgE,QAASnG,KAC7CA,MAAOmG,EACPlB,YAAajE,EAAG,2BAA4B,eAEhDoB,MAAAC,cAAChB,EAAD,CACIuB,QAAQ,KAClBN,UAAY,iBACFE,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACL,QAAS9B,KAC7CA,MAAO8B,EACPmD,YAAajE,EAAG,yBAA0B,iBAc1D8B,KA5D+B,SAAAC,GA4DZ,IAAbrB,EAAaqB,EAAbrB,WAEEyE,EAEAzE,EAFAyE,QACArE,EACAJ,EADAI,QAGJ,OACIM,MAAAC,cAAA,MAAIC,UAAY,UACZF,MAAAC,cAAChB,EAAS2B,QAAV,CACIJ,QAAQ,KAClBN,UAAY,eACFtC,MAAOmG,IAEX/D,MAAAC,cAAChB,EAAS2B,QAAV,CACIJ,QAAQ,KAClBN,UAAY,iBACFtC,MAAO8B,2BC9FpBd,EAAMC,GAAGC,KAATF,GACAG,EAAqBF,GAAGG,OAAxBD,oBAC6DF,GAAGgC,WAAlDC,KAAdC,eAAcD,cAAcE,cAAWC,WACvCC,KAD+C8C,WACnCnF,GAAGsC,QAAfD,YAC0DrC,GAAGK,OAA7DD,aAAUmC,sBAAmBC,kBAAaC,aAgBjDvC,EAAkB,iBAAkB,CAEhCI,MAAOP,EAAG,OAAQ,aAClBQ,KAlBc,aAmBdC,SAAU,gBACVC,WAAY,CACRyE,QAAS,CACLvE,KAAM,SACNG,OAAQ,OACRC,SAAU,MAEdF,QAAS,CACLF,KAAM,SACNG,OAAQ,OACRC,SAAU,MAEdqE,UAAW,CACPzE,KAAM,SACNC,QAAS,oBAEjByE,YAAa,CACZ1E,KAAM,SACNC,QAAS,OAYVI,KAlCgC,SAAAC,GAkCE,IAA5BR,EAA4BQ,EAA5BR,WAAYS,EAAgBD,EAAhBC,cAEVgE,EAIAzE,EAJAyE,QACArE,EAGAJ,EAHAI,QACAwE,EAEA5E,EAFA4E,YACAD,EACA3E,EADA2E,UAGJ,MAAO,CACHjE,MAAAC,cAACiB,EAAD,KACIlB,MAAAC,cAACmB,EAAD,KACIpB,MAAAC,cAACe,EAAD,CAAW7B,MAAOP,EAAG,mBAAoB,cACrCoB,MAAAC,cAACa,EAAD,CACIP,SAAU0D,EACV9B,QAAS,CACL,CAACF,MAAOrD,EAAG,gBAAiB,aAAchB,MAAO,oBACjD,CAACqE,MAAOrD,EAAG,eAAgB,aAAchB,MAAO,sBAEpDwC,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACkE,UAAWrG,SAK3DoC,MAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAM8D,EAAN,aACrBjE,MAAAC,cAAA,OAAKC,UAAY,iBACNF,MAAAC,cAAA,MAAIC,UAAY,sBACZF,MAAAC,cAAChB,EAAD,CACIuB,QAAQ,KACRN,UAAY,2BACZE,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACgE,QAASnG,KAC7CA,MAAOmG,EACPlB,YAAajE,EAAG,cAAe,eAEnCoB,MAAAC,cAAChB,EAAD,CACIuB,QAAQ,KACtBN,UAAY,6BACEE,SAAU,SAACxC,GAAD,OAAWmC,EAAc,CAACL,QAAS9B,KAC7CA,MAAO8B,EACPmD,YAAajE,EAAG,gBAAiB,gBAGnDoB,MAAAC,cAAA,OAAKC,UAAW,uBACdF,MAAAC,cAACoB,EAAD,CACEe,SAAU,SAACxE,GAAD,OAAWmC,EAAc,CAACmE,YAAatG,EAAM2E,OACvD/C,KAAK,QACLU,UAAY,sBACZtC,MAAOsG,EACP1B,OAAQ,SAAA7B,GAAA,IAAE8B,EAAF9B,EAAE8B,KAAF,OACNzC,MAAAC,cAACgB,EAAD,CACEyB,QAASD,EACTvC,UAAWgE,EAAc,eAAiB,uBAExCA,EACAlE,MAAAC,cAAA,OAAKC,UAAW,aAAcyC,IAAKuB,EAAatB,IAAKhE,EAAG,eAAgB,eAD1DA,EAAG,eAAgB,uBAqBjD8B,KA3GgC,SAAAsC,GA2Gb,IAAb1D,EAAa0D,EAAb1D,WAEEyE,EAIAzE,EAJAyE,QACArE,EAGAJ,EAHAI,QACAwE,EAEA5E,EAFA4E,YACAD,EACA3E,EADA2E,UAGJ,OACIjE,MAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAM8D,EAAN,aACnBjE,MAAAC,cAAA,OAAKC,UAAY,iBACRF,MAAAC,cAAA,MAAIC,UAAY,sBACZF,MAAAC,cAAChB,EAAS2B,QAAV,CACIJ,QAAQ,KACRN,UAAY,2BACZtC,MAAOmG,IAEX/D,MAAAC,cAAChB,EAAS2B,QAAV,CACIJ,QAAQ,KACpBN,UAAY,6BACAtC,MAAO8B,KAGrBwE,EACDlE,MAAAC,cAAA,OAAKC,UAAY,uBAChBF,MAAAC,cAAA,OACE0C,IAAMuB,EACNtB,IAAI,MACK","file":"./inc/vk-blocks/build/block-build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","//Bundle JS\nimport './alert/block.js';\nimport './balloon/block.js';\nimport './button/block.js';\nimport './faq/block.js';\nimport './flow/block.js';\n","/**\n * Alert block type\n *\n */\n\nconst {__} = wp.i18n; // Import __() from wp.i18n\nconst { registerBlockType } = wp.blocks;\nconst { RichText }          = wp.editor;\n\nregisterBlockType( 'vk-blocks/alert', {\n\n  title: __('Alert', 'vk-blocks'),\n\n  icon: 'info',\n\n  category: 'vk-blocks-cat',\n\n  attributes: {\n    style: {\n      type: 'string',\n      default: 'info',\n    },\n    content: {\n        type: 'string',\n        source: 'html',\n        selector: 'p',\n    }\n  },\n\n  edit({attributes, setAttributes}) {\n      const {\n          style,\n          content\n      } = attributes;\n\n    function onStyleChange(event){\n      setAttributes({style: event.target.value});\n    }\n\n    function onChangeContent(newContent) {\n      setAttributes({content: newContent});\n    }\n\n    return (\n        <div className={`alert alert-${style}`}>\n        <select onChange={onStyleChange}>\n            <option value={'success'} selected={style === 'success'}>Success</option>\n            <option value={'info'} selected={style === 'info'}>Info</option>\n            <option value={'warning'} selected={style === 'warning'}>Warning</option>\n            <option value={'danger'} selected={style === 'danger'}>Danger</option>\n        </select>\n        <RichText\n            tagName=\"p\"\n            onChange={onChangeContent}\n            value={content}\n        />\n      </div>\n    );\n  },\n\n  save({attributes}) {\n      const {\n          style,\n          content\n      } = attributes;\n    return (\n        <div className={`alert alert-${style}`}>\n        <RichText.Content\n            tagName={'p'}\n            value={content}/>\n      </div>\n    );\n  },\n\n} );\n","/**\n * Baloon block type\n *\n */\n\nconst {__} = wp.i18n; // Import __() from wp.i18n\nconst { registerBlockType } = wp.blocks; // Import registerBlockType() from wp.blocks\nconst {RangeControl, RadioControl, PanelBody, Button} = wp.components;\nconst { Fragment } = wp.element;\nconst {RichText, InspectorControls, MediaUpload, ColorPalette} = wp.editor;\nconst BlockIcon = (\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"576\" height=\"512\" viewBox=\"0 0 576 512\">\n\t\t<path d=\"M544 450.583c0 22.75 13.014 42.454 32 52.092v7.969c-5.313 0.727-10.736 1.112-16.25 1.112-34.004 0-64.674-14.264-86.361-37.132-13.111 3.491-27.001 5.376-41.389 5.376-79.529 0-144-57.308-144-128s64.471-128 144-128c79.529 0 144 57.308 144 128 0 27.674-9.882 53.296-26.678 74.233-3.412 7.412-5.322 15.656-5.322 24.35zM115.339 110.593c-33.107 26.899-51.339 61.492-51.339 97.407 0 20.149 5.594 39.689 16.626 58.075 11.376 18.96 28.491 36.293 49.494 50.126 15.178 9.996 25.39 25.974 28.088 43.947 0.9 5.992 1.464 12.044 1.685 18.062 3.735-3.097 7.375-6.423 10.94-9.988 12.077-12.076 28.39-18.745 45.251-18.745 2.684 0 5.381 0.168 8.078 0.512 10.474 1.331 21.172 2.008 31.797 2.010v64c-13.564-0.001-26.877-0.869-39.871-2.521-54.989 54.989-120.625 64.85-184.088 66.298v-13.458c34.268-16.789 64-47.37 64-82.318 0-4.877-0.379-9.665-1.082-14.348-57.898-38.132-94.918-96.377-94.918-161.652 0-114.875 114.615-208 256-208 139.229 0 252.496 90.307 255.918 202.76-20.548-9.158-42.92-14.711-66.131-16.289-5.765-28.034-22.701-54.408-49.126-75.878-17.661-14.349-38.458-25.695-61.814-33.722-24.853-8.54-51.38-12.871-78.847-12.871s-53.994 4.331-78.847 12.871c-23.356 8.027-44.153 19.372-61.814 33.722z\"/>\n\t</svg>\n);\n\n/**\n * Register: aa Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType('vk-blocks/balloon', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n    title: __('Ballon', 'vk-blocks'), // Block title.\n\ticon: BlockIcon, // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'vk-blocks-cat', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tattributes: {\n\t\tcontent: {\n\t\t\tsource: 'html',\n            selector: 'p',\n\t\t},\n        balloonName: {\n            source: 'html',\n            selector: 'figcaption',\n        },\n        balloonType: {\n            type: 'string',\n            default: 'type-serif',\n        },\n\t\tballoonBgColor: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tballoonAlign: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'position-left',\n\t\t},\n\t\tIconImage: {\n\t\t\ttype: 'string',\n\t\t\tdefault: null, // no image by default!\n\t\t}\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * The \"edit\" property must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t */\n\tedit( { attributes, className, setAttributes } ) {\n\t\tconst {\n\t\t\tcontent,\n            balloonName,\n            balloonType,\n            balloonBgColor,\n\t\t\tballoonAlign,\n\t\t\tIconImage,\n\t\t} = attributes;\n\n        return (\n\t\t\t<Fragment>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={__('Balloon setting', 'vk-blocks')}>\n\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\tlabel={__('Position', 'vk-blocks')}\n\t\t\t\t\t\t\thelp={__('Please specify the layout of the balloon.', 'vk-blocks')}\n\t\t\t\t\t\t\tselected={ balloonAlign }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{ label: __('Left', 'vk-blocks'), value: 'position-left' },\n\t\t\t\t\t\t\t\t{ label: __('Right', 'vk-blocks'), value: 'position-right' },\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChange={ ( value ) => setAttributes( { balloonAlign: value } ) }\n\t\t\t\t\t\t/>\n\t\t        <RadioControl\n\t\t            label={__('Type', 'vk-blocks')}\n\t\t            help={__('Please select the type of balloon.', 'vk-blocks')}\n\t\t            selected={ balloonType }\n\t\t            options={ [\n\t\t                { label: __('Serif', 'vk-blocks'), value: 'type-serif' },\n\t\t                { label: __('Thinking', 'vk-blocks'), value: 'type-think' }\n\t\t            ] }\n\t\t            onChange={ ( value ) => setAttributes( { balloonType: value } ) }\n\t\t        />\n\t\t        <ColorPalette\n\t\t            value={balloonBgColor}\n\t\t            onChange={(value) => setAttributes({balloonBgColor: value})}\n\t\t        />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\n\t\t\t\t<div className={ `${ className } vk_balloon vk_balloon-${ balloonAlign } vk_balloon-${ balloonType }` }>\n\t\t\t\t\t<div className={ 'vk_balloon_icon' }>\n\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\tonSelect={ (value) => setAttributes( { IconImage: value.sizes.full.url } ) }\n\t\t\t\t\t\t\ttype=\"image\"\n\t\t\t\t\t\t\tclassName={ 'vk_balloon_icon_image' }\n\t\t\t\t\t\t\tvalue={ IconImage }\n\t\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\tclassName={ IconImage ? 'image-button' : 'button button-large' }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ ! IconImage ? __('Select image', 'vk-blocks') : <img className={ 'vk_balloon_icon_image' } src={ IconImage } alt={__('Upload image', 'vk-blocks') } /> }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n                        <RichText\n                            tagName=\"figcaption\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={ 'vk_balloon_icon_name' }\n                            onChange={ ( value ) => setAttributes( { balloonName: value } ) }\n                            value={ balloonName }\n                            placeholder={__('Icon Name', 'vk-blocks') }\n                        />\n\t\t\t\t\t</div>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tstyle={ { background: balloonBgColor, border: balloonBgColor } }\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tclassName={ 'vk_balloon_content' }\n\t\t\t\t\t\tonChange={ ( value ) => setAttributes( { content: value } ) }\n\t\t\t\t\t\tvalue={ content }\n\t\t\t\t\t\tplaceholder={__('Input text', 'vk-blocks') }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n        );\n\t},\n\n\n\t/**\n\t * The save function defin className }> which the different attributes should be combined\n\t * into the final markup, which is then serialized by Gutenberg into post_content.\n\t *\n\t * The \"save\" property must be specified and must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t */\n\tsave( { attributes, className } ) {\n\t\tconst {\n\t\t\tcontent,\n            balloonName,\n            balloonType,\n            balloonBgColor,\n\t\t\tballoonAlign,\n\t\t\tIconImage,\n\t\t} = attributes;\n\n\t\treturn (\n\t\t\t<div className={ `vk_balloon vk_balloon-${ balloonAlign } vk_balloon-${ balloonType }` }>\n\t\t\t\t<div className={ 'vk_balloon_icon' }>\n\t\t\t\t\t{ IconImage ?\n\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName={ 'vk_balloon_icon_image' }\n\t\t\t\t\t\t\t\tsrc={ IconImage }\n\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t/>\n                            <RichText.Content\n                                tagName=\"figcaption\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={ 'vk_balloon_icon_name' }\n                                value={ balloonName }\n                            />\n\t\t\t\t\t\t</figure> : '' }\n\t\t\t\t</div>\n\t\t\t\t<RichText.Content\n\t\t\t\t\tclassName={ 'vk_balloon_content' }\n\t\t\t\t\tstyle={ { background: balloonBgColor, border: balloonBgColor } }\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tvalue={ content }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n});\n","/**\n * Button block type\n *\n */\n\nconst {__} = wp.i18n; // Import __() from wp.i18n\nconst {registerBlockType} = wp.blocks; // Import registerBlockType() from wp.blocks\nconst {RangeControl, RadioControl, PanelBody, Button, BaseControl, CheckboxControl, TextControl} = wp.components;\nconst {Fragment} = wp.element;\nconst {RichText, InspectorControls, MediaUpload, ColorPalette} = wp.editor;\nconst BlockIcon = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"576\" height=\"512\" viewBox=\"0 0 576 512\">\n        <path\n            d=\"M544 450.583c0 22.75 13.014 42.454 32 52.092v7.969c-5.313 0.727-10.736 1.112-16.25 1.112-34.004 0-64.674-14.264-86.361-37.132-13.111 3.491-27.001 5.376-41.389 5.376-79.529 0-144-57.308-144-128s64.471-128 144-128c79.529 0 144 57.308 144 128 0 27.674-9.882 53.296-26.678 74.233-3.412 7.412-5.322 15.656-5.322 24.35zM115.339 110.593c-33.107 26.899-51.339 61.492-51.339 97.407 0 20.149 5.594 39.689 16.626 58.075 11.376 18.96 28.491 36.293 49.494 50.126 15.178 9.996 25.39 25.974 28.088 43.947 0.9 5.992 1.464 12.044 1.685 18.062 3.735-3.097 7.375-6.423 10.94-9.988 12.077-12.076 28.39-18.745 45.251-18.745 2.684 0 5.381 0.168 8.078 0.512 10.474 1.331 21.172 2.008 31.797 2.010v64c-13.564-0.001-26.877-0.869-39.871-2.521-54.989 54.989-120.625 64.85-184.088 66.298v-13.458c34.268-16.789 64-47.37 64-82.318 0-4.877-0.379-9.665-1.082-14.348-57.898-38.132-94.918-96.377-94.918-161.652 0-114.875 114.615-208 256-208 139.229 0 252.496 90.307 255.918 202.76-20.548-9.158-42.92-14.711-66.131-16.289-5.765-28.034-22.701-54.408-49.126-75.878-17.661-14.349-38.458-25.695-61.814-33.722-24.853-8.54-51.38-12.871-78.847-12.871s-53.994 4.331-78.847 12.871c-23.356 8.027-44.153 19.372-61.814 33.722z\"/>\n    </svg>\n);\n\n/**\n * Register: a Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType('vk-blocks/button', {\n    // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n    title: __('Button', 'vk-blocks'), // Block title.\n    icon: BlockIcon, // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n    category: 'vk-blocks-cat', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n    attributes: {\n        content: {\n            source: 'html',\n            selector: 'p',\n        },\n        buttonUrl: {\n            type: 'string',\n            default: null,\n        },\n        buttonSize: {\n            type: 'string',\n            default: 'sm',\n        },\n        buttonType: {\n            type: 'string',\n            default: '0',\n        },\n        buttonColor: {\n            type: 'string',\n            default: 'primary',\n        },\n        buttonColorCustom: {\n            type: 'string',\n            default: null,\n        },\n        buttonAlign: {\n            type: 'string',\n            default: 'position-left',\n        }\n    },\n\n    /**\n     * The edit function describes the structure of your block in the context of the editor.\n     * This represents what the editor will render when the block is used.\n     *\n     * The \"edit\" property must be a valid function.\n     *\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n     */\n    edit({attributes, className, setAttributes}) {\n        const {\n            content,\n            buttonUrl,\n            buttonSize,\n            buttonType,\n            buttonColor,\n            buttonColorCustom,\n            buttonAlign\n        } = attributes;\n\n        function onStyleChange(event) {\n            setAttributes({buttonColor: event.target.value});\n        }\n        function onSizeChange(event) {\n            setAttributes({buttonSize: event.target.value});\n        }\n\n        return (\n            <Fragment>\n                <InspectorControls>\n                    <PanelBody title={__('Button setting', 'vk-blocks')}>\n                        <BaseControl\n                            label={__('Link URL:', 'vk-blocks')}\n                        >\n                            <TextControl\n                                value={buttonUrl}\n                                onChange={(value) => setAttributes({buttonUrl: value})}\n                            />\n                        </BaseControl>\n                        <BaseControl\n                            label={__('Button Color:', 'vk-blocks')}\n                        >\n                            <ColorPalette\n                                value={buttonColorCustom}\n                                onChange={(value) => setAttributes({buttonColorCustom: value})}\n                            />\n                            <RadioControl\n                                label={__('Button Style:', 'vk-blocks')}\n                                selected={buttonType}\n                                options={[\n                                    {label: __('Solid color', 'vk-blocks'), value: '0'},\n                                    {label: __('No background', 'vk-blocks'), value: '1'},\n                                ]}\n                                onChange={(value) => setAttributes({buttonType: value})}\n                            />\n                        </BaseControl>\n                    </PanelBody>\n                </InspectorControls>\n                {(() => {\n                    if (buttonColorCustom) {\n\n                        if (buttonType === '0') {\n                            return <button type=\"button\" className={`btn btn-${buttonSize}`} style={{\n                                backgroundColor: buttonColorCustom,\n                                border: `1px solid ${buttonColorCustom}`\n                            }}>\n                                <RichText\n                                    tagName=\"p\"\n                                    className={'vk_button_content'}\n                                    onChange={(value) => setAttributes({content: value})}\n                                    value={content}\n                                    placeholder={__('Input text', 'vk-blocks')}\n                                />\n                            </button>;\n                        } else {\n                            return <button type=\"button\" className={`btn btn-${buttonSize}`} style={{\n                                backgroundColor: 'transparent',\n                                border: '1px solid' + buttonColorCustom\n                            }}>\n                                <RichText\n                                    tagName=\"p\"\n                                    className={'vk_button_content'}\n                                    onChange={(value) => setAttributes({content: value})}\n                                    value={content}\n                                    placeholder={__('Input text', 'vk-blocks')}\n                                />\n                            </button>;\n                        }\n                    } else {\n\n                        return <div>\n                            <select onChange={onStyleChange}>\n                                <option value={'success'} selected={buttonColor === 'success'}>Success</option>\n                                <option value={'info'} selected={buttonColor === 'info'}>Info</option>\n                                <option value={'warning'} selected={buttonColor === 'warning'}>Warning</option>\n                                <option value={'danger'} selected={buttonColor === 'danger'}>Danger</option>\n                            </select>\n                            <select onChange={onSizeChange}>\n                                <option value={'lg'} selected={buttonColor === 'lg'}>__('Large', 'vk-blocks')</option>\n                                <option value={'sm'} selected={buttonColor === 'sm'}>__('Medium', 'vk-blocks')</option>\n                                <option value={'xs'} selected={buttonColor === 'xs'}>__('Small', 'vk-blocks')</option>\n                            </select>\n                            <button type=\"button\" className={`btn btn-${buttonSize} btn-${buttonColor}`}>\n                                <RichText\n                                    tagName=\"p\"\n                                    className={'vk_button_content'}\n                                    onChange={(value) => setAttributes({content: value})}\n                                    value={content}\n                                    placeholder={__('Input text', 'vk-blocks')}\n                                />\n                            </button>\n                        </div>\n                    }\n                })()}\n            </Fragment>\n        );\n    },\n\n\n    /**\n     * The save function defin className }> which the different attributes should be combined\n     * into the final markup, which is then serialized by Gutenberg into post_content.\n     *\n     * The \"save\" property must be specified and must be a valid function.\n     *\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n     */\n    save({attributes, className}) {\n        const {\n            content,\n            buttonName,\n            buttonType,\n            buttonBgColor,\n            buttonAlign,\n            IconImage,\n        } = attributes;\n\n        return (\n            <div className={`vk_button vk_button-${ buttonAlign } vk_button-${ buttonType }`}>\n                <div className={'vk_button_icon'}>\n                    {IconImage ?\n                        <figure>\n                            <img\n                                className={'vk_button_icon_image'}\n                                src={IconImage}\n                                alt=''\n                            />\n                            <RichText.Content\n                                tagName=\"figcaption\"\n                                className={'vk_button_icon_name'}\n                                value={buttonName}\n                            />\n                        </figure> : ''}\n                </div>\n                <RichText.Content\n                    className={'vk_button_content'}\n                    style={{background: buttonBgColor, border: buttonBgColor}}\n                    tagName=\"p\"\n                    value={content}\n                />\n            </div>\n        );\n    },\n});\n","/**\n * Faq block type\n *\n */\nconst {__} = wp.i18n; // Import __() from wp.i18n\nconst {registerBlockType} = wp.blocks; // Import registerBlockType() from wp.blocks\nconst {RichText} = wp.editor;\nconst BlockIcon = 'editor-help';\n\n/**\n * Register: aa Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType('vk-blocks/faq', {\n    // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n    title: __('FAQ', 'vk-blocks'), // Block title.\n    icon: BlockIcon, // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n    category: 'vk-blocks-cat', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n    attributes: {\n        heading: {\n            type: 'string',\n            source: 'html',\n            selector: 'dt',\n        },\n        content: {\n            type: 'string',\n            source: 'html',\n            selector: 'dd',\n        }\n    },\n\n    /**\n     * The edit function describes the structure of your block in the context of the editor.\n     * This represents what the editor will render when the block is used.\n     *\n     * The \"edit\" property must be a valid function.\n     *\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n     */\n    edit({attributes, setAttributes}) {\n        const {\n            heading,\n            content\n        } = attributes;\n\n        return (\n            <dl className={'vk_faq'}>\n                <RichText\n                    tagName=\"dt\"\n\t\t\t\t\t\t\t\t\t\tclassName={ 'vk_faq_title' }\n                    onChange={(value) => setAttributes({heading: value})}\n                    value={heading}\n                    placeholder={__('Please enter a question.', 'vk-blocks') }\n                />\n                <RichText\n                    tagName=\"dd\"\n\t\t\t\t\t\t\t\t\t\tclassName={ 'vk_faq_content' }\n                    onChange={(value) => setAttributes({content: value})}\n                    value={content}\n                    placeholder={__('Please enter a answer.', 'vk-blocks') }\n                />\n            </dl>\n        );\n    },\n\n    /**\n     * The save function defin className }> which the different attributes should be combined\n     * into the final markup, which is then serialized by Gutenberg into post_content.\n     *\n     * The \"save\" property must be specified and must be a valid function.\n     *\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n     */\n    save({attributes}) {\n        const {\n            heading,\n            content\n        } = attributes;\n\n        return (\n            <dl className={ 'vk_faq' }>\n                <RichText.Content\n                    tagName=\"dt\"\n\t\t\t\t\t\t\t\t\t\tclassName={ 'vk_faq_title' }\n                    value={heading}\n                />\n                <RichText.Content\n                    tagName=\"dd\"\n\t\t\t\t\t\t\t\t\t\tclassName={ 'vk_faq_content' }\n                    value={content}\n                />\n            </dl>\n        );\n    },\n});\n","/**\n * Flow block type\n *\n */\nconst {__} = wp.i18n; // Import __() from wp.i18n\nconst {registerBlockType} = wp.blocks; // Import registerBlockType() from wp.blocks\nconst {RangeControl, RadioControl, PanelBody, Button, PanelColor} = wp.components;\nconst {Fragment} = wp.element;\nconst {RichText, InspectorControls, MediaUpload, ColorPalette} = wp.editor;\nconst BlockIcon = 'arrow-down';\n\n/**\n * Register: aa Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType('vk-blocks/flow', {\n    // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n    title: __('Flow', 'vk-blocks'), // Block title.\n    icon: BlockIcon, // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n    category: 'vk-blocks-cat', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n    attributes: {\n        heading: {\n            type: 'string',\n            source: 'html',\n            selector: 'dt',\n        },\n        content: {\n            type: 'string',\n            source: 'html',\n            selector: 'dd',\n        },\n        arrowFlag: {\n            type: 'string',\n            default: 'vk_flow-arrow-on',\n        },\n\t\t\t\tinsertImage: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: null, // no image by default!\n\t\t\t\t}\n    },\n\n    /**\n     * The edit function describes the structure of your block in the context of the editor.\n     * This represents what the editor will render when the block is used.\n     *\n     * The \"edit\" property must be a valid function.\n     *\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n     */\n    edit({attributes, setAttributes}) {\n        const {\n            heading,\n            content,\n            insertImage,\n            arrowFlag,\n        } = attributes;\n\n        return [\n            <Fragment>\n                <InspectorControls>\n                    <PanelBody title={__('Display of arrow', 'vk-blocks') }>\n                        <RadioControl\n                            selected={arrowFlag}\n                            options={[\n                                {label: __('Arrow display', 'vk-blocks'), value: 'vk_flow-arrow-on'},\n                                {label: __('Arrow hidden', 'vk-blocks'), value: 'vk_flow-arrow-off'},\n                            ]}\n                            onChange={(value) => setAttributes({arrowFlag: value})}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n\n                <div className={`${ arrowFlag } vk_flow`}>\n\t\t\t\t\t\t\t\t\t<div className={ 'vk_flow_frame' } >\n                    <dl className={ 'vk_flow_frame_text' }>\n                        <RichText\n                            tagName=\"dt\"\n                            className={ 'vk_flow_frame_text_title' }\n                            onChange={(value) => setAttributes({heading: value})}\n                            value={heading}\n                            placeholder={__('Input title', 'vk-blocks') }\n                        />\n                        <RichText\n                            tagName=\"dd\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={ 'vk_flow_frame_text_content' }\n                            onChange={(value) => setAttributes({content: value})}\n                            value={content}\n                            placeholder={__('Input content', 'vk-blocks') }\n                        />\n                    </dl>\n\t\t\t\t\t\t\t\t\t\t<div className={'vk_flow_frame_image'}>\n\t\t\t\t\t\t\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={(value) => setAttributes({insertImage: value.url})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={ 'vk_flow_frame_image' }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={insertImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={({open}) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={open}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={insertImage ? 'image-button' : 'button button-large'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!insertImage ? __('Select image', 'vk-blocks') :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img className={'icon-image'} src={insertImage} alt={__('Upload image', 'vk-blocks')}/>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n                </div>\n            </Fragment>\n        ];\n    },\n\n\n    /**\n     * The save function defin className }> which the different attributes should be combined\n     * into the final markup, which is then serialized by Gutenberg into post_content.\n     *\n     * The \"save\" property must be specified and must be a valid function.\n     *\n     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n     */\n    save({attributes}) {\n        const {\n            heading,\n            content,\n            insertImage,\n            arrowFlag,\n        } = attributes;\n\n        return (\n            <div className={`${ arrowFlag } vk_flow`}>\n\t\t\t\t\t\t\t<div className={ 'vk_flow_frame' }>\n                <dl className={ 'vk_flow_frame_text' }>\n                    <RichText.Content\n                        tagName=\"dt\"\n                        className={ 'vk_flow_frame_text_title' }\n                        value={heading}\n                    />\n                    <RichText.Content\n                        tagName=\"dd\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={ 'vk_flow_frame_text_content' }\n                        value={content}\n                    />\n                </dl>\n\t\t\t\t\t\t\t\t{ insertImage ?\n\t\t\t\t\t\t\t\t\t<div className={ 'vk_flow_frame_image' }>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={ insertImage }\n\t\t\t\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t\t\t/></div> : '' }\n\t\t\t\t\t\t\t</div>\n            </div>\n        );\n    },\n});\n"],"sourceRoot":""}